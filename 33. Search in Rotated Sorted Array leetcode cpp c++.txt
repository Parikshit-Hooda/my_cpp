//https://leetcode.com/problems/search-in-rotated-sorted-array/
class Solution {
public:
    int search(vector<int>& nums, int target) {
        if(nums.size() == 0) return -1;
        
        int low = 0, high = nums.size()-1, mid;
        int ans = -1;
        while(low <= high) {
            
            //if low < mid
            int mid = low + (high-low)/2;
            cout << mid << " ";
            if(nums[mid] == target) {
                ans = mid;
                break;
            }
            
            if(nums[mid] >= nums[low]) {
                if(target >= nums[low] && target < nums[mid])
                    high = mid-1;
                else low = mid+1;
            } else if(nums[mid] <= nums[high]) {
                if(target > nums[mid] && target <= nums[high])
                    low = mid+1;
                else high = mid-1;
            }
            
            
        }
        
        cout << endl;
        return ans;
        
    }
};
