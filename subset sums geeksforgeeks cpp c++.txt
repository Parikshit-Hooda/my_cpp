//https://practice.geeksforgeeks.org/problems/subset-sums2234/1#
class Solution
{
public:
    vector<int> subsetSums(vector<int> arr, int N)
    {
        // Write Your Code here
        vector<int> res;
       // res.push_back(0);
        if(N == 0) {
            res.push_back(0);
            return res;
        }
        vector<int>::const_iterator start = arr.begin() + 1;
        vector<int>::const_iterator end = arr.end();
        
        vector<int> newVec(start, end);
        res = subsetSums(newVec, N-1);
        int subsetsSize = res.size();
        
        int currEle = arr[0];
        
       // if(currEle == 0) return res;
        
        for(int i = 0 ; i < subsetsSize ; i++) {
            int tempSum = currEle + res[i];
            res.push_back(tempSum);
        }
        
        return res;
        
        
    }
};
