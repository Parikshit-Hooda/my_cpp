class Solution {
public:
    int minPathSum(vector<vector<int>>& grid) {
        int res=0;
        vector<vector<int>> minToEle(grid.size(), vector<int> (grid[0].size(), 0));

        minToEle[0][0] = grid[0][0];

        for(int i =1; i < minToEle[0].size(); i++) {
            minToEle[0][i] = grid[0][i] + minToEle[0][i-1];
        }
        for(int i =1; i < minToEle.size(); i++) {
            minToEle[i][0] = grid[i][0] + minToEle[i-1][0];
        }
        // for(int i = 0; i < minToEle.size(); i++) {
        //     for(int j = 0; j < minToEle[0].size(); j++) {
        //         cout << minToEle[i][j] << " ";
        //     }
        //     cout << endl;
        // } // initial assignment good

        for(int i = 1; i < minToEle.size(); i++) {
            for(int j = 1; j < minToEle[0].size(); j++) {
                minToEle[i][j] = min(minToEle[i-1][j]+grid[i][j],minToEle[i][j-1]+grid[i][j] );
            }
        }
        res = minToEle[minToEle.size()-1][minToEle[0].size()-1];
        return res;
    }
};
