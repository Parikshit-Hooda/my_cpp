/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    TreeNode* insertIntoBST(TreeNode* root, int val) {
        if(root == nullptr) {
            TreeNode *temp = new TreeNode(val);
            return temp;
        } //base of empty bst

        TreeNode* insertHere;
        TreeNode* curr = root;
        while(curr != nullptr) {
            // if(root->left == nullptr && root->right == nullptr) break
            insertHere = curr;

            if(curr->val < val) {
                curr = curr->right;
            } else {
                curr = curr->left;
            }


        }
        //curr stores leaf here hopefully
        if(val < insertHere->val) {
            TreeNode *temp = new TreeNode(val);
            insertHere->left = temp;
        } else {
            TreeNode *temp = new TreeNode(val);
            insertHere->right = temp;
        }

        return root;
    }
};
