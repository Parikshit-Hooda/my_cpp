#include <iostream>
#include <queue>
using namespace std;

int main() {
	// your code goes here
	long long arr[] = {4, 2, 7, 6, 9};
	
	 long long res = 0;
        int arr_size = *(&arr + 1) - arr;
        if(arr_size < 2) {
            //combine elements
            if(arr_size == 0) return res;
            if(arr_size == 1) return arr[0];
        }
        
        priority_queue<long long , vector<long long>, greater<long long>> minheap;
        //push all content in minheap
        for(int i = 0; i < arr_size; i++) minheap.push(arr[i]);
        
        //pop each element of min heap iteratively and form res
        long long top1 = minheap.top(); minheap.pop();
        long long top2 = minheap.top(); minheap.pop();
        //cout <<"top1 top2 " << top1 << " " << top2 << endl; 
        res = top1 + top2; //ok
        minheap.push(res);

        while(minheap.size() != 1) {
            top1 = minheap.top(); minheap.pop();
        	top2 = minheap.top(); minheap.pop();
        	res = (res + top1 + top2);
        	minheap.push(top1 + top2);
            
        }
        
       cout << res;
    
	
	return 0;
}
