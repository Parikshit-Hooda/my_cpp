//https://leetcode.com/problems/unique-paths/
class Solution {
public:
    int uniquePaths(int m, int n) {
        if(m==0 && n==0) return 0;
        
        if(m==1 && n==0) return 1;
        if(m==0 && n==1) return 1;
        
        //create 2D DP array
        vector<vector<int>> dp(m, vector<int>(n,0));
        
        //init first row
        for(int i = 0 ; i < n; i++) {
            dp[0][i] = 1;
        }
        //init first column
        for(int i = 0 ; i < m; i++) {
            dp[i][0] = 1;
        }
        
        //loop from 1,1 to m,n and fill DP array
        for(int i = 1 ; i < m ; i++) {
            for(int j = 1 ; j < n ; j++) {
                dp[i][j] = dp[i-1][j] + dp[i][j-1];
            }
        }
        
        return dp[m-1][n-1];
        
        
    }
};
