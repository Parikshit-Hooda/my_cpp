//{ Driver Code Starts
//Initial template for C++

#include<bits/stdc++.h>
using namespace std;

// } Driver Code Ends
//User function template for C++

class Solution 
{
    public:
    //Function to find if there is a celebrity in the party or not.
    int celebrity(vector<vector<int> >& M, int n) 
    {
        // code here 
        
        int res;
        stack<int> s;
        for(int i = 0; i < n; i++) {
            s.push(i);
        } //stack initialized
        
        while(s.size()>1) {
           int c1 = s.top();
           s.pop();
           int c2 = s.top();
           s.pop();
           //compare
           if(M[c1][c2] == 1) s.push(c2);
           else s.push(c1);
        }
        //here, ill have only 1 candidate in s
        // if(!s.empty()) return -1;
        int candidate = s.top();
        //check
        for(int i = 0; i < M[0].size(); i++) {
            if(i!=candidate)
                {
                       if(M[candidate][i] == 1 || M[i][candidate]==0) return -1;
                }
                 
        }
        // if(!s.empty()) return -1;
        return res=candidate;
    }
};

//{ Driver Code Starts.

int main()
{
    int t;
    cin>>t;
    while(t--)
    {
        int n;
        cin>>n;
        vector<vector<int> > M( n , vector<int> (n, 0));
        for(int i=0;i<n;i++)
        {
            for(int j=0;j<n;j++)
            {
                cin>>M[i][j];
            }
        }
        Solution ob;
        cout<<ob.celebrity(M,n)<<endl;

    }
}

// } Driver Code Ends
