#include <bits/stdc++.h>

using namespace std;

struct node {
  int data;
  struct node * left, * right;
};

void reorder(node * root) {
  //do preorder
  if (!root) return ;
  
  //update root
  int crv = root->data, crlv=0, crrv=0;
  if(root->left) crlv = root->left->data;
  if(root->right) crrv = root->right->data;
  root->data = max(root->data, crlv+crrv);
  reorder(root->left);
  reorder(root->right);
  
    if(root->left) crlv = root->left->data;
  if(root->right) crrv = root->right->data;
  root->data = max(root->data, crlv+crrv);
  
  cout << root->data << " ";
  return ;
  
}
void changeTree(node * root) {
  reorder(root);
}

struct node * newNode(int data) {
  struct node * node = (struct node * ) malloc(sizeof(struct node));
  node -> data = data;
  node -> left = NULL;
  node -> right = NULL;

  return (node);
}

int main() {

  struct node * root = newNode(40);
  root -> left = newNode(40);
  root -> left -> left = newNode(40);
  root -> left -> right = newNode(40);
  root -> right = newNode(40);
  root -> right -> left = newNode(40);
  root -> right -> right = newNode(40);

  changeTree(root);
  
  //cout << root->data << " " << root->left->data << " " << root->right->data
  //<< " " << root->left->left->data << " " << root->left->right->data << " " << << root->right->left->data
  //<< " " << root->right

  return 0;
}
