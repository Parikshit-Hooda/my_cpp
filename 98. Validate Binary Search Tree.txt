/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:

    bool lvbst(TreeNode* curr, long long imin, long long imax) {
        if(curr == nullptr) return true;
        if(curr->val <= imin || curr->val >= imax) return false;
        bool valid = lvbst(curr->left, imin, curr->val) && rvbst(curr->right,curr->val , imax);
        if(!valid) return false;
        return true;
    }

    bool rvbst(TreeNode* curr, long long imin, long long imax) {
        if(curr == nullptr) return true;
        if(curr->val <= imin || curr->val >= imax) return false;
        bool valid = lvbst(curr->left, imin, curr->val) && rvbst(curr->right,curr->val , imax);
        if(!valid) return false;
        return true;        
    }

    bool isValidBST(TreeNode* root) {
        if(root == nullptr) return true;

        bool left = lvbst(root->left, (long long)INT_MIN-1, root->val);
        bool right = rvbst(root->right, root->val, (long long)INT_MAX+1);
       
        if(!left || !right) return false;

        return true;


    }
};
