class Solution {
public:
    
    void printm(vector<vector<int>> &m, int n) {
                for(int i =0 ; i < n; i++) {
            for(int j= 0; j < n; j++) {
                cout << m[i][j] <<" ";
            }
            cout << endl;
        }
        return ;
    }
    
    vector<vector<int>> rangeAddQueries(int n, vector<vector<int>>& queries) {
        //naive - process each query
        
        vector<vector<int>> m(n, vector<int> (n,0));
        
        for(vector<int> query: queries) {
            vector<int> cq = query;
            //manip m
            for(int i = cq[0]; i <= cq[2]; i++) {
                for(int j = cq[1]; j <= cq[3]; j++) {
                    m[i][j] += 1;
                }
            }
            
        }

        
        return m;
    }
};
