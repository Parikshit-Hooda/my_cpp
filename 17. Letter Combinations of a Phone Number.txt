class Solution {
    private:
    vector<string> mapping = {"", "", "abc", "def", "ghi", "jkl", "mno", "pqrs", "tuv", "wxyz"};
public:


    vector<string> letterCombinations(string digits) {
        vector<string> res;
        
        queue<string> q;
        q.push("");
        if(digits.size() < 1) return res;
        
        for(int i = 0; i < digits.size(); i++) {
            char currch = digits[i]; //here you get '2', '3', etc.
            string currmapping = mapping[currch-'0']; //here, get "abc" "pqrs"
            int qsize = q.size();
            for(int j = 0; j < qsize; j++) {
                string curr = q.front(); q.pop();
                for(char c: currmapping) {
                    q.push(curr + c);
                }
            }
            


        } //for i loop
        while(!q.empty()) {
            res.push_back(q.front()); q.pop();
        }
        return res;

    }
};
