/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    int findDiameter(TreeNode* root, int &d) {
        if(root == nullptr) return 0;
        //at each node, height wanted.
        int lh = findDiameter(root->left, d), rh = findDiameter(root->right, d);
        d = max(d, lh + rh);
        return max(lh,rh)+1;
    }
    int diameterOfBinaryTree(TreeNode* root) {
        int diameter = 0;
        if(root == nullptr) return diameter;

        int res = findDiameter(root, diameter);
        return diameter;
    }
};
