//https://leetcode.com/problems/find-the-celebrity/
//https://www.geeksforgeeks.org/the-celebrity-problem/
class Solution 
{
    public:
    //Function to find if there is a celebrity in the party or not.
    int celebrity(vector<vector<int> >& M, int n) 
    {
        // code here 
        stack<int> s;
        //push 0 to n-1 in stack
        for(int i = 0; i < n; i++) {
            s.push(i);
        }
        
        //while stack size > 1
        while(s.size() > 1) {
            //pick top two elements
            int atop = s.top();
            s.pop();
            int btop = s.top();
            s.pop();
            bool aKnowsb = M[atop][btop];
            if(aKnowsb == true) s.push(btop);
            else s.push(atop);
            
        }
        
        //here only one element will remain
        //check 1, the candidate knows nobody
        int candidate = s.top();
        bool flag = 1, res;
        for(int i = 0; i < n; i++) {
            if(M[candidate][i] == 1) {
                flag = 0; break;
            }
        }
        //check 2, everybody knows the candidate
        for(int i = 0; i < n; i++) {
            if(i!=candidate)
                if(M[i][candidate] == 0) {
                     flag = 0; break;
                }
        }
        
        if(flag == false) return -1;
        else if(flag == true) {
            return candidate;
        }
    }
};
