/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    int calc(TreeNode* root, int &maxsum) {
        if(root == nullptr) return 0;
        int leftsum = max(0,calc(root->left, maxsum));
        int rightsum = max(0, calc(root->right, maxsum));
        maxsum = max(maxsum, leftsum + rightsum + root->val);
        return root->val + max(leftsum, rightsum);
    }

    int maxPathSum(TreeNode* root) {
        int maxsum=INT_MIN;
       int sumThroughRoot =  calc(root, maxsum);
        return maxsum;
    }
};
