/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:

    void find(TreeNode* root, int k, int &ck, int &res) {
        if(root == nullptr) return ;

        //go left
        find(root->left, k, ck, res);
        if(k==ck) res = root->val;
        ck++;

        find(root->right, k, ck, res);
        return ;
    }

    int kthSmallest(TreeNode* root, int k) {
        if(root == nullptr) return -1;

        int res = -1;
        int ck = 1;
        find(root, k, ck, res);

        return res;
    }
};
