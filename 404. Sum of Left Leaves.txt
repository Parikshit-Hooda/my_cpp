/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:

    int findsum(TreeNode* root, char dir, int &sum) {
        //if node if leaf
        if(root->left == nullptr && root->right == nullptr && dir == 'l') {
            sum += root->val;
            return 0;
        }
        if(root->left != nullptr) {
            findsum(root->left, 'l', sum);
        }
        if(root->right != nullptr) {
            findsum(root->right, 'r', sum);
        }
        return 0;

    }

    int sumOfLeftLeaves(TreeNode* root) {
        int sum = 0;
        if(root->left == nullptr && root->right == nullptr) return 0;
        int res = findsum(root, 'l', sum);
        
        return sum;
    }
};
