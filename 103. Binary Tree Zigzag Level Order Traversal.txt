/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    vector<vector<int>> zigzagLevelOrder(TreeNode* root) {
        vector<vector<int>> res;
        if(root == nullptr) return res;
        queue<TreeNode*> q;
        int lvl = 1;
        q.push(root);
        while(!q.empty()) {
            int qsize = q.size();
            vector<int> currlevel;
            for(int i = 0 ; i < qsize; i++) {
                TreeNode* qfront = q.front();
                q.pop();
                int temp = qfront->val ;
                // cout << qfront->val << " ";
                currlevel.push_back(temp);
                if(qfront->left != nullptr) q.push(qfront->left);
                if(qfront->right != nullptr) q.push(qfront->right);
            }
            if(lvl%2==0) {
                reverse(currlevel.begin(), currlevel.end());
            }
            res.push_back(currlevel);
            lvl++;
        }

        return res;
    }
};
