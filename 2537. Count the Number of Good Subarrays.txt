//  https://youtu.be/ZCI-mXIQWAE
//map + sliding window to maintain running count and contribute to ans at each step
class Solution {
public:
    long long countGood(vector<int>& nums, int k) {
        long long c=0, ans=0;
        unordered_map<int, int> mp;
        int j=0, n=nums.size();
        for(int i=0;i<nums.size();i++)
        {
            mp[nums[i]]++;
            c+=(mp[nums[i]]-1);
            while(c>=k && j<=i)
            {
                ans+=(n-i);
                mp[nums[j]]--;
                c-=mp[nums[j]];
                j++;
            }
        }
        return ans;
    }
};
