//https://leetcode.com/problems/roman-to-integer/
class Solution {
public:
    
    bool findIntCurr2(string curr2) {
        int flag = 0;
        if(curr2 == "IV") flag = 1;
        else if(curr2 == "IX") flag = 1;
        else if(curr2 == "XL") flag = 1;
        else if(curr2 == "XC") flag = 1;
        else if(curr2 == "CD") flag = 1;
        else if(curr2 == "CM") flag = 1;

        if(flag == 0) return false;
        return true;
    }
    
    int romanToInt(string s) {
        int res = 0;
        
        map<char, int> mp; mp['I'] = 1, mp['V'] = 5, mp['X'] = 10, 
        mp['L'] = 50, mp['C'] = 100, mp['D'] = 500, mp['M'] = 1000;
        int ss = s.size();
        for(int i = 0; i < ss; i++) {
            //find if IV, IX, XL, XC, CD, CM type
            string curr2 = ""; //see if curr2 possible, ie within string s bounds
            if(i < ss-1) {
                curr2 = s.substr(i, 2);
            }
            
            
            //if valid assignment of curr2, add value to res
            if(curr2.size()==2 && findIntCurr2(curr2)) {
                int temp = 0;
                if(curr2 == "IV") temp = 4;
                else if(curr2 == "IX") temp = 9;
                else if(curr2 == "XL") temp = 40;
                else if(curr2 == "XC") temp = 90;
                else if(curr2 == "CD") temp = 400;
                else if(curr2 == "CM") temp = 900;
                
                res += temp; i++;
                continue;
            } else {
                res += mp[s[i]];
            }
            
            
            
            
        }
        
        
        return res;
    }
};
